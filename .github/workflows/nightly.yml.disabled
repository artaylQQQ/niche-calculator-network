name: Nightly calculator publish (V037.2 - stable)

on:
  schedule:
    - cron: "30 2 * * *" # 02:30 UTC diario
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # permite git push con GITHUB_TOKEN
    env:
      SITE_URL: https://calcsimpler.com
      MAX_PER_DAY: 40

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Preflight (env & tree)
        run: |
          node -v
          npm -v
          echo "SITE_URL=${SITE_URL}"
          echo "MAX_PER_DAY=${MAX_PER_DAY}"
          echo "Repo files:"
          ls -la
          echo "Subtrees:"
          ls -la src || true
          ls -la src/pages || true
          ls -la src/pages/calculators || true
          ls -la scripts || true
          ls -la data || true
          ls -la meta || true

      - name: Ensure required files/folders
        run: |
          mkdir -p src/pages/calculators
          mkdir -p data
          mkdir -p meta
          [ -f meta/publish_log.json ] || echo "[]" > meta/publish_log.json
          if [ ! -f data/calculators_extra.json ]; then
            echo "[]"> data/calculators_extra.json
          fi

      - name: Install dependencies (no lockfile)
        run: npm install --no-audit --no-fund

      - name: Remove sample calculators and push
        run: |
          set -e
          removed=false
          if ls src/pages/calculators/*sample*.mdx >/dev/null 2>&1; then
            rm -f src/pages/calculators/*sample*.mdx
            removed=true
          fi
          if [ -f src/pages/calculators/health-quick-calculator.mdx ]; then
            rm -f src/pages/calculators/health-quick-calculator.mdx
            removed=true
          fi
          if $removed; then
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git add -A
            git commit -m "chore: remove sample calculators" || true
            git push || true
          else
            echo "No sample calculators found."
          fi

      - name: Merge extra calculators into data/calculators.json and push
        run: |
          node -e "const fs=require('fs');const p='data/calculators.json';const add='data/calculators_extra.json';let base=[];try{base=JSON.parse(fs.readFileSync(p,'utf8'))}catch(e){};let extra=[];try{extra=JSON.parse(fs.readFileSync(add,'utf8'))}catch(e){};const sl=new Set(base.map(x=>x.slug));for(const it of extra){if(!sl.has(it.slug)) base.push(it)};fs.mkdirSync('data',{recursive:true});fs.writeFileSync(p,JSON.stringify(base,null,2));"
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add data/calculators.json || true
          git commit -m "chore: merge extra calculators for category minimums" || true
          git push || true

      - name: Verify generator
        run: |
          if [ ! -f scripts/generate_calcs.js ]; then
            echo "::error::scripts/generate_calcs.js no existe. Sube el archivo del paquete V037.2."
            exit 1
          fi
          if ! cat package.json | grep -q "\"generate\""; then
            echo "::error::No existe script npm 'generate' en package.json"
            cat package.json
            exit 1
          fi

      - name: Generate new calculators
        run: npm run generate

      - name: Commit and push generated calculators
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add src/pages/calculators meta/publish_log.json data/calculators.json || true
          if git diff --cached --quiet; then
            echo 'No new calculators to commit.'
          else
            git commit -m "chore: publish new calculators"
            git push || true
          fi

      - name: Build site (capture log)
        run: |
          set -o pipefail
          npm run build 2>&1 | tee build.log

      - name: Upload build log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
          if-no-files-found: ignore

      - name: Check for broken links (non-blocking)
        run: |
          npx linkinator dist --recurse --silent > link-check.txt 2>&1 || true
          echo "Link check finished."

      - name: Upload link check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: link-check-report
          path: link-check.txt
          if-no-files-found: ignore

      - name: Ping search engines with sitemap-index.xml only
        run: |
          curl --silent --show-error --location "https://www.google.com/ping?sitemap=${{ env.SITE_URL }}/sitemap-index.xml" || true
          curl --silent --show-error --location "https://www.bing.com/ping?sitemap=${{ env.SITE_URL }}/sitemap-index.xml" || true
