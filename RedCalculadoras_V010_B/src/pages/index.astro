---
// src/pages/index.astro
import BaseLayout from '../layouts/BaseLayout.astro';

const pages = await Astro.glob('./calculators/*.mdx');
const items = pages
  .map(p => ({
    url: p.url,
    slug: p.url.replace('/calculators/','').replace('/',''),
    title: p.frontmatter?.title ?? 'Calculator',
    cluster: p.frontmatter?.cluster ?? 'General',
    updated: new Date(p.frontmatter?.updated || p.frontmatter?.date || '2000-01-01').getTime(),
    description: p.frontmatter?.description ?? `${p.frontmatter?.title} — online calculator.`,
  }))
  .sort((a, b) => b.updated - a.updated);

const title = 'Niche Calculator Network — Fast, Accurate, Free';
const description = 'Browse hundreds of free calculators. Accurate results, simple inputs, no sign-up.';
const base = Astro.site?.toString() || (import.meta.env.SITE_URL ?? 'https://example.com');
const href = new URL(Astro.url.pathname, base).toString();
---

<BaseLayout {title} {description}>
  <Fragment slot="head">
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={href} />
    <meta name="twitter:card" content="summary" />
  </Fragment>

  <section class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
    {items.slice(0, 24).map(item => (
      <a href={item.url} class="block p-4 rounded-xl border hover:shadow">
        <h2 class="text-lg font-semibold">{item.title}</h2>
        <p class="text-sm opacity-80">{item.description}</p>
        <p class="text-xs mt-2 opacity-60">Cluster: {item.cluster}</p>
      </a>
    ))}
  </section>
</BaseLayout>
