---
import BaseLayout from "../layouts/BaseLayout.astro";
const modules = import.meta.glob("../pages/calculators/*.mdx", { eager: true });
const items = Object.values(modules).map((m) => ({ url: m.url, fm: m.frontmatter || {} }));
---
<BaseLayout title="All Calculators" description="Browse every calculator available on the site.">
  <section class="hero container mx-auto max-w-5xl px-4">
    <h1 style="color: var(--ink)">All Calculators</h1>
    <p style="color: var(--muted)">Explore every calculator available on the site.</p>
  </section>
  <section class="section container mx-auto max-w-5xl px-4" aria-labelledby="list-all">
    <h2 id="list-all" class="sr-only">All calculators list</h2>
    <!-- Search input -->
    <div style="margin-bottom:16px;">
      <input id="calc-search" type="text" placeholder="Search calculatorsâ€¦" class="input" style="width:100%;max-width:600px;" />
    </div>
    <!-- Use a responsive Tailwind grid for consistent card sizes across breakpoints -->
    <div id="calc-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
      {items.map((it) => {
        const title = it.fm.title || it.url.replace('/calculators/','').replace('.mdx','');
        const desc  = it.fm.intro || it.fm.description || '';
        const searchText = (title + ' ' + desc).toLowerCase();
        return (
          <div data-search={searchText}>
            <a class="card" href={it.url}>
              <h3>{title}</h3>
              <p>{desc}</p>
            </a>
          </div>
        );
      })}
    </div>
    <script>
      // Simple client-side search for the calculators list.  Filters cards based on
      // text content defined in the data-search attribute.  Runs in the browser
      // after the page is loaded.
      (function() {
        const input = document.getElementById('calc-search');
        const items = document.querySelectorAll('#calc-grid [data-search]');
        input.addEventListener('input', function() {
          const term = this.value.trim().toLowerCase();
          items.forEach((el) => {
            const haystack = el.getAttribute('data-search');
            // Show the card if the search term is empty or present in the text
            el.style.display = !term || haystack.includes(term) ? '' : 'none';
          });
        });
      })();
    </script>
  </section>
</BaseLayout>
