---
import BaseLayout from "../layouts/BaseLayout.astro";
import AdBanner from "../components/AdBanner.astro";
const modules = import.meta.glob("../pages/calculators/*.mdx", { eager: true });
const items = Object.values(modules).map((m) => ({
  url: m.url,
  title:
    m.frontmatter?.title ||
    m.url.replace('/calculators/', '').replace('.mdx', ''),
  description:
    m.frontmatter?.intro || m.frontmatter?.description || '',
  date: m.frontmatter?.date || ''
}));
---
<BaseLayout title="Search Calculators" description="Find any calculator available on the site.">
  <section class="hero container mx-auto max-w-5xl px-4">
    <h1 style="color: var(--ink)">Search Calculators</h1>
    <p style="color: var(--muted)">Search through every calculator available on the site.</p>
    <input
      id="search-input"
      type="search"
      placeholder="Search calculators"
      class="w-full mt-4 p-2 border rounded-md"
    />
    <div class="mt-4">
      <label for="sort-select" class="sr-only">Sort calculators</label>
      <select id="sort-select" class="p-2 border rounded-md">
        <option value="title-asc">Alphabetical (A-Z)</option>
        <option value="title-desc">Alphabetical (Z-A)</option>
        <option value="date-desc">Newest to Oldest</option>
        <option value="date-asc">Oldest to Newest</option>
      </select>
    </div>
  </section>
  <AdBanner />
  <section class="section container mx-auto max-w-5xl px-4" aria-labelledby="list-all">
    <h2 id="list-all" class="sr-only">Calculator search results</h2>
    <!-- Use a responsive Tailwind grid for consistent card sizes across breakpoints -->
    <div
      id="results"
      class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4"
    >
      {items.map((it) => (
        <div
          data-title={it.title.toLowerCase()}
          data-description={it.description.toLowerCase()}
          data-date={it.date}
        >
          <a class="card" href={it.url}>
            <h3>{it.title}</h3>
            <p>{it.description}</p>
          </a>
        </div>
      ))}
    </div>
  </section>
  <script is:inline>
    const input = document.getElementById('search-input');
    const select = document.getElementById('sort-select');
    const container = document.getElementById('results');
    const cards = Array.from(container.children);

    function sortCards(list, value) {
      switch (value) {
        case 'title-desc':
          return list.sort((a, b) =>
            b.dataset.title.localeCompare(a.dataset.title)
          );
        case 'date-asc':
          return list.sort(
            (a, b) => new Date(a.dataset.date) - new Date(b.dataset.date)
          );
        case 'date-desc':
          return list.sort(
            (a, b) => new Date(b.dataset.date) - new Date(a.dataset.date)
          );
        default:
          return list.sort((a, b) =>
            a.dataset.title.localeCompare(b.dataset.title)
          );
      }
    }

    function apply() {
      const q = input.value.trim().toLowerCase();
      const ordered = sortCards([...cards], select.value);
      ordered.forEach((card) => {
        const t = card.dataset.title;
        const d = card.dataset.description;
        const match = !q || t.includes(q) || d.includes(q);
        card.style.display = match ? '' : 'none';
        container.appendChild(card);
      });
    }

    input.addEventListener('input', apply);
    select.addEventListener('change', apply);
    apply();
  </script>
</BaseLayout>
