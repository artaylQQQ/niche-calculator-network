---
import BaseLayout from '../../layouts/BaseLayout.astro';
import fs from 'node:fs';
import path from 'node:path';
import { fileURLToPath } from 'node:url';

/** Genera rutas y datos sin variables globales */
export async function getStaticPaths() {
  // 1) Mapa de categorías (definido dentro de la función)
  const CATEGORIES = [
    { slug: 'finance',     map: ['Finance','Finance & Loans','Taxes','Business','Business & Commerce'] },
    { slug: 'health',      map: ['Health','Health & Fitness'] },
    { slug: 'conversions', map: ['Conversions','Unit Conversions'] },
    { slug: 'geometry',    map: ['Geometry','Areas & Volumes'] },
    { slug: 'algebra',     map: ['Algebra','Percentages & Ratios'] },
    { slug: 'time-date',   map: ['Time & Date'] },
    { slug: 'statistics',  map: ['Statistics'] },
    { slug: 'business',    map: ['Business','Business & Commerce','Pricing'] }
  ];

  // 2) Lee calculators.json en build
  const __filename = fileURLToPath(import.meta.url);
  const __dirname  = path.dirname(__filename);
  const dataPath   = path.resolve(__dirname, '../../../data/calculators.json');

  let calcs = [];
  try {
    calcs = JSON.parse(fs.readFileSync(dataPath, 'utf-8'));
  } catch (e) {
    console.warn('Could not read calculators.json at build time:', e?.message);
    calcs = [];
  }

  // 3) Para cada categoría, calcula su lista y la pasa en props
  return CATEGORIES.map((cat) => {
    const list = Array.isArray(calcs)
      ? calcs.filter((it) =>
          (it?.cluster ?? '') &&
          cat.map.some((v) => (it.cluster || '').toLowerCase().includes(v.toLowerCase()))
        ).slice(0, 200)
      : [];

    return {
      params: { slug: cat.slug },
      props:  { cat, list }
    };
  });
}

// Recibe cat y list ya preparados desde getStaticPaths
const { cat, list = [] } = Astro.props;
---

<BaseLayout title={`${cat.slug} calculators`} description={`Browse ${cat.slug} calculators`}>
  <section class="hero">
    <h1 style="text-transform:capitalize">{cat.slug} Calculators</h1>
    <p>Explore calculators in this category.</p>
  </section>

  {list.length === 0 ? (
    <p class="section">No calculators yet in this category.</p>
  ) : (
    <section class="section" aria-labelledby="cat-list">
      <h2 id="cat-list" class="sr-only">Calculators list</h2>
      <ul class="grid">
        {list.map((c) => (
          <li>
            <a class="card" href={`/calculators/${c.slug}/`}>
              <h3>{c.title}</h3>
              <p>{c.intro ?? ''}</p>
            </a>
          </li>
        ))}
      </ul>
    </section>
  )}
</BaseLayout>
